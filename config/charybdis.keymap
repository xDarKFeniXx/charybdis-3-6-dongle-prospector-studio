#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define MOUSE 1
#define SYMBOL 2
#define NUMBER 3
#define FUNCTION 4
#define GAME 5
#define RESET 6
#define CARETER 7

#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24  
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define THUMBS 30 31 32 33 34 35  

&sk {
  release-after-ms = <600>;
  quick-release;
};

&sl {
  ignore-modifiers;
};

&mt {
  flavor = "tap-preferred";
};

&lt {
  flavor = "balanced";
  tapping-term-ms = <200>;
  quick-tap-ms = <175>;
};

&caps_word {
  /delete-property/ ignore-modifiers;
};

/ {
  behaviors {
    hml: hml {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <2000>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <250>;
      hold-trigger-key-positions = <KEYS_R THUMBS>;
      hold-trigger-on-release;
      bindings =
        <&kp>,
        <&kp>;
    };

    hmr: hmr {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <2000>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <250>;
      hold-trigger-key-positions = <KEYS_L THUMBS>;
      hold-trigger-on-release;
      bindings =
        <&kp>,
        <&kp>;
    };
    hml_s: hml_s {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <2000>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <0>;
      hold-trigger-key-positions = <KEYS_R THUMBS>;
      hold-trigger-on-release;
      bindings =
        <&kp>,
        <&kp>;
    };

    hmr_s: hmr_s {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      tapping-term-ms = <2000>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <0>;
      hold-trigger-key-positions = <KEYS_L THUMBS>;
      hold-trigger-on-release;
      bindings =
        <&kp>,
        <&kp>;
    };


    smart_shift: smart_shift {
      compatible = "zmk,behavior-mod-morph";
      #binding-cells = <0>;
      bindings = <&sk LSHIFT>, <&caps_word>;
      mods = <(MOD_LSFT)>;
    };
  };

  combos {
    compatible = "zmk,combos";
    timeout-ms = <20>;
    require-prior-idle-ms = <250>;

    combo_reset_layer_left {
      key-positions = <20 24>;
      bindings = <&to RESET>;
    };
    combo_reset_layer_right {
      key-positions = <25 29>;
      bindings = <&to RESET>;
    };
    combo_reset_central {
      key-positions = <32 33>;
      bindings = <&bootloader>;
      require-prior-idle-ms = <2000>;
    };
    combo_normal {
      key-positions = <7 8>;
      bindings = <&to BASE>;
    };
    combo_fn {
      key-positions = <27 28>;
      bindings = <&sl FUNCTION>;
    };
    combo_caret {
      key-positions = <5 9>;
      bindings = <&to CARETER>;
    };
    // combo_esc {
    //   key-positions = <1 2>;
    //   bindings = <&kp ESCAPE>;
    // };
    // combo_tab {
    //   key-positions = <2 3>;
    //   bindings = <&kp TAB>;
    // };
    // combo_cdel {
    //   key-positions = <11 12>;
    //   bindings = <&kp LC(BACKSPACE)>;
    // };
    combo_unlock {
      key-positions = <0 4>;
      bindings = <&studio_unlock>;
    };
  };
  chosen {
    zmk,physical-layout = &charybdis_6col_layout;
  };

  keymap {
    compatible = "zmk,keymap";

    Base {
      display-name = "Base";
      bindings = <
        &lt FUNCTION ESCAPE   &kp Q   &kp W  &kp E   &kp R  &kp T               &kp Y                &kp U      &kp I       &kp O     &kp P      &kp LEFT_BRACKET
        &kp TAB               &kp A   &kp S  &kp D   &kp F  &kp G               &kp H                &kp J      &kp K       &kp L     &kp SEMI   &kp SINGLE_QUOTE
        &kp LSHFT             &kp Z   &kp X  &kp C   &kp V  &kp B               &kp N                &kp M      &kp COMMA   &kp DOT   &kp FSLH   &kp RSHFT
                    &mt LCTRL LC(SPACE)    &lt 2 SPACE     &mt LGUI RET         &lt NUMBER SPACE     &kp BSPC
      >;
    };
    Mouse {
      display-name = "Mouse";
      bindings = <
        &trans   &trans   &trans   &trans    &trans    &trans            &trans &trans   &trans   &trans   &trans     &trans 
        &trans   &kp LGUI &kp LALT &kp LSHFT &kp LCTRL &trans            &trans &mkp MB1 &mkp MB2 &mkp MB3 &trans     &trans
        &trans   &trans   &trans   &mo 3     &mo 2     &trans            &trans &trans   &trans   &trans   &trans     &trans
                          &mkp MB1  &mkp MB2  &mkp MB3          &trans &trans 
      >;
    };
    Careter {
      display-name = "Careter";
      bindings = <
        &trans   &trans   &trans   &trans    &trans    &trans            &trans &trans   &trans   &trans   &trans     &trans 
        &trans   &kp LGUI &kp LALT &kp LSHFT &kp LCTRL &trans            &trans &mkp MB1 &mkp MB2 &mkp MB3 &trans     &trans
        &trans   &trans   &trans   &mo 3     &mo 2     &trans            &trans &trans   &trans   &trans   &trans     &trans
                          &mkp MB1  &mkp MB2  &mkp MB3          &trans &trans 
      >;
    };
    Sym {
      display-name = "Symbol";
      bindings = <
        &trans &none &none &kp LEFT_BRACE       &kp RIGHT_BRACE       &kp PIPE              &kp GRAVE &kp TILDE &kp LESS_THAN &kp GREATER_THAN &kp BACKSLASH        &trans
        &trans &none &none &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp COLON             &kp PLUS  &kp MINUS &kp SLASH     &kp ASTRK        &kp SINGLE_QUOTE     &trans
        &trans &none &none &kp LEFT_BRACKET     &kp RIGHT_BRACKET     &kp QUESTION          &kp AMPS  &kp EQUAL &kp UNDER     &kp PERIOD       &kp DOUBLE_QUOTES    &trans
                    &none                &none                 &trans                &none     &none                                                                     
      >;
    };

    Num {
      display-name = "Number";
      bindings = <
        &trans   &none      &kp N7  &kp N8  &kp N9  &none                  &kp RGUI        &kp PG_UP  &kp UP     &kp PG_DN  &none     &trans
        &trans   &kp LGUI   &kp N4  &kp N5  &kp N6  &none                  &kp END         &kp LEFT   &kp DOWN   &kp RIGHT  &kp RGUI  &trans
        &trans   &none      &kp N1  &kp N2  &kp N3  &kp LC(MINUS)          &kp LC(EQUAL)   &kp RGUI   &kp RSHFT  &kp RALT   &kp RCTRL &trans
                                &kp DOT         &kp N0          &kp SPACE              &trans        &none
      >;
    };

    Fun {
      display-name = "Function";
      bindings = <
        &trans    &kp LC(LA(DEL)) &kp F7 &kp F8 &kp F9 &kp F10          &none &none     &none     &none    &none      &trans        
        &trans    &none           &kp F4 &kp F5 &kp F6 &kp F11          &none &kp LCTRL &kp LSHFT &kp LALT &kp LGUI   &trans     
        &trans    &none           &kp F1 &kp F2 &kp F3 &kp F12          &none &none     &none     &none    &none      &trans
                               &none  &none  &none            &none &none
      >;
    };

    Button {
      display-name = "Game";
      bindings = <
        &kp ESCAPE &kp ESCAPE &kp Q &kp W    &kp E     &kp R          &none  &none    &none    &none    &none   &trans   
        &trans &kp LCTRL  &kp A &kp S    &kp D     &kp F          &none  &mkp MB1 &mkp MB2 &mkp MB3 &none   &trans 
        &trans &kp LSHIFT &kp Z &kp X    &kp C     &kp V          &kp N1 &kp N2   &kp N3   &kp N4   &kp N5  &trans
                         &kp LALT &kp SPACE &kp M          &kp T  &kp B                      
      >;
    };

    Reset {
      display-name = "Reset";
      bindings = <
        &trans &none &none &none &none &none                &none &none &none &none &none &trans      
        &trans &none &none &none &none &none                &none &none &none &none &none &trans   
        &trans &none &none &none &none &none                &none &none &none &none &none &trans
                    &none &none &bootloader          &bootloader &none                
      >;
    };
  };
};









